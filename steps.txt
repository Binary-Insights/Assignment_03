ssh -i ~/.ssh/assignment_03.pem ubuntu@18.219.43.192

cd Assignment_03
source .venv/bin/activate
uvicorn pilots.main_api:app --host 0.0.0.0 --port 8000
streamlit run pilots/chat_app.py --server.port 8501 --server.address 0.0.0.0


FastAPI: http://18.219.43.192:8000/docs
Streamlit: http://18.219.43.192:8501



----------------------------------------------- LAB - 01 -------------------------------------

# Step 1
## Spliting pdf
python src/parse/pdf_splitter.py data/raw/FINTBX/pdf/fintbx.pdf --size 3 --output data/raw
python src/parse/pdf_splitter.py data/raw/FINTBX/pdf/fintbx.pdf --pages 100 --output data/raw

## Parsing 
# It creates parsing_provenance.json
# It reads the downloaded pdf's and parses into text, tables, figures,.. etc using Docling
python src/parse/docling_extractor.py NVDA --pdf Q4FY25-CFO-Commentary.pdf

python diagnose_structure.py

python inspect_doc.py 2>&1 | sed -n '1,200p'

python test_extraction.py 2>&1 | tail -60

python inspect_page_image.py 2>&1 | grep -v "INFO -"

python src/parse/pdf_reconstructor.py

python src/parse/docling_extractor_v2.py FINTBX/pdf/split_pdfs --pdf fintbx_part_001.pdf

# Works a little better 
python src/parse/pdf_generator_v2.py "data/parsed/FINTBX/fintbx_part_001/docling_extraction_results.json"


#


# Does chunking part of Lab 1 

# To generate chunks using different stategies
python src/rag/experimental_framework.py 

# Gives a summary of pinecone integration
python src/rag/pinecone_integration.py


# Ingestion into Pinecone - inserts vectors into 
python src/rag/ingest_to_pinecone.py



# This is one way to run the FastAPI server 
python -m uvicorn backends.rag_fastapi_server:app --reload --host localhost --port 8000


----------------------------------------------- LAB - 02 -------------------------------------








----------------------------------------------- LAB - 04 -------------------------------------

# Installation
pip install psycopg2-binary wikipedia instructor langchain-openai pinecone fastapi uvicorn python-dotenv streamlit pymupdf langchain_text_splitters


# Database Setup:
createdb concept_db

# Run the Server:
python enhanced_fastapi_server.py

Alternate way
python -m src.backends.enhanced_fastapi_server



# To run backend
python run_fastapi.py

# To run frontend
streamlit run src/frontend/rag_streamlit_frontend.py 

pip install -U pip pip-tools pipdeptree




















----------------------------------------------- Prompt Text -------------------------------------
"""
Based on the following content about "{concept_term}", extract and structure the key financial information,
Provide comprehensive, accurate financial information. 

Content:
{content}

Please create a detailed financial concept note with all required fields.
Ensure the confidence_score results the quality and completeness of extracted information.
"""